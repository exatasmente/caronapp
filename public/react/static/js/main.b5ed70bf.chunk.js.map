{"version":3,"sources":["logo.svg","services/auth.js","configs/api.js","services/api.js","components/InputDate.jsx","pages/Cadastro/index.jsx","pages/Login/styles.js","pages/Login/index.jsx","components/FormCarona.jsx","pages/Caronas/index.jsx","components/FormUsuario.jsx","pages/Perfil/index.jsx","components/FormVeiculo.jsx","pages/Veiculo/index.jsx","pages/Home/index.jsx","routes.js","styles/global.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ROLE_KEY","getToken","localStorage","getItem","getRole","login","token","role","setItem","setToken","setRole","ROUTE_SINGUP","ROUTE_CLIENTE","base","viagem","carona","ROUTE_MOTORISTA","api","axios","create","baseURL","interceptors","request","use","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","wrap","_context","prev","next","headers","Authorization","abrupt","stop","_x","apply","this","arguments","InputDate","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$props","name","onSelect","errorMessage","format","rest","objectWithoutProperties","errorVisible","react_default","createElement","FormGroup","ControlLabel","DatePicker","assign","locale","sunday","monday","tuesday","wednesday","thursday","friday","saturday","ok","today","yesterday","hours","minutes","seconds","ErrorMessage","style","display","color","marginTop","show","Component","Schema","Types","StringType","DateType","NumberType","modelStep1","Model","date","isRequired","addRule","value","data","Date","time","pessoas","isInteger","min","modelStep2","line_1","line_2","city","state","zipcode","modelStep3","first_name","last_name","email","isEmail","username","password","password_confirm","modelStep4","fabricante","modelo","placa","ano","lugares","SignUp","_this","_next","lastStep","driver","currentStep","validateStep","setState","clearFormErrors","_prev","handleSignUp","e","_this$state","formStep1","formStep2","formStep3","formStep4","preventDefault","form","check","console","error","destino","usuario","veiculo","post","then","response","status","history","push","t0","log","latitude","longitude","formError","bind","assertThisInitialized","updateDate","updateTime","_this2","react_router_dom","to","onClick","Button","appearance","type","formValues","step1","step2","step3","step4","setHours","getHours","setMinutes","getMinutes","_this3","formValue","_getCurrentFormState","model","_getCurrentFormModel","Container","Content","FlexboxGrid","justify","paddingTop","paddingBottom","Item","colspan","Panel","header","bordered","src","Logo","alt","height","margin","Form","ref","onChange","setFormState","onCheck","fluid","getCurrentStep","ButtonToolbar","padding","previousButton","nextButton","_this4","FormControl","Toggle","checked","components_InputDate","placeholder","defaultValue","block","step","max","getFullYear","styled","div","_templateObject","_templateObject2","Login","handleLogin","styles_Container","styles_Form","onSubmit","target","modelDate","modelDestino","FormDestino","_Component","line_city","handleChange","validate","inherits","createClass","key","values","FormDate","_Component2","styleCenter","justifyContent","alignItems","slimText","fontSize","fontWeight","titleStyle","whiteSpace","dataStyle","Home","loading","formDate","React","createRef","formDestino","_getViagens","handleNewViagem","url","get","showNotification","Header","PanelGroup","accordion","FormCarona_FormDate","instance","FormCarona_FormDestino","ButtonGroup","List","hover","map","item","index","objectSpread","flexDirection","overflow","textAlign","Whisper","trigger","placement","speaker","Tooltip","solicitacao","getStatusText","length","Icon","icon","href","FormUsuario","user","Perfil","_fetchUser","components_FormUsuario","FormVeiculo","Veiculo","_fetchVeiculo","components_FormVeiculo","headerStyles","background","message","Notification","title","description","AppLayout","children","Sidebar","width","collapsible","Sidenav","defaultOpenKeys","Body","Nav","eventKey","active","removeItem","PrivateRoute","_ref2","component","react_router","render","routes_AppLayout","pathname","from","location","Routes","exact","path","routes_PrivateRoute","Caronas","createGlobalStyle","global_templateObject","App","routes","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5ed70bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3762619f.svg\";","export const TOKEN_KEY = \"@caronapp-Token\";\nexport const ROLE_KEY = \"@caronapp-userRole\";\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\nexport const setToken = (token) => localStorage.setItem(TOKEN_KEY,token);\nexport const isAuthenticated = () => getToken() !== null;\nexport const setRole = (role) => localStorage.setItem(ROLE_KEY,role);\nexport const getRole = () => localStorage.getItem(ROLE_KEY);\nexport const login = (token,role) => { setToken(token)  ; setRole(role) };\nexport const logout = () => {localStorage.removeItem(TOKEN_KEY) ; localStorage.removeItem(ROLE_KEY)};","export const API_URL = \"http://car-onapp.herokuapp.com/api/v1/\"\nexport const ROUTE_SINGUP = \"cadastro\"\n\nexport const ROUTE_CLIENTE = {\n    base:\"usuario\",\n    login:\"session\",\n    viagem:\"viagem\",\n    carona:\"carona\"\n};\nexport const ROUTE_MOTORISTA = {\n    base:\"usuario\",\n    login:\"session\",\n    viagem:\"viagem\",\n    carona:\"carona\",\n    veiculo:\"veiculo\"\n};","import axios from \"axios\"\nimport { getToken } from \"./auth\"\nimport { API_URL } from \"../configs/api\"\nconst api = axios.create({ \n    baseURL: API_URL\n})\napi.interceptors.request.use(async config => {\n    const token = getToken();\n    if(token){\n        config.headers.Authorization = 'Bearer '+ token;\n    }\n    return config;\n})\nexport default api;","import React, { Component } from 'react';\nimport {ControlLabel, DatePicker, FormGroup, ErrorMessage} from \"rsuite\";\n\n\nclass InputDate extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n   \n    render() {\n        const { name, onSelect, errorMessage, format, ...rest} = this.props;\n        const errorVisible = errorMessage != null\n        return (\n           <FormGroup>\n              <ControlLabel>{name} </ControlLabel>\n              <DatePicker \n              format = {format}\n              onSelect = {onSelect}\n              locale={{\n                  sunday: 'Dom',\n                  monday: 'Seg',\n                  tuesday: 'Ter',\n                  wednesday: 'Qua',\n                  thursday: 'Qui',\n                  friday: 'Sex',\n                  saturday: 'Sab',\n                  ok: 'OK',\n                  today: 'Hoje',\n                  yesterday: null,\n                  hours: 'Horas',\n                  minutes: 'Minutos',\n                  seconds: 'Segundos'\n               }} \n               { ...rest }\n               />\n              <ErrorMessage style={{ display: errorVisible ? 'block' : 'none', color: 'red', marginTop: 6 }} show={errorVisible} > \n                {errorMessage} \n                \n              </ErrorMessage>\n              \n           </FormGroup>\n        );\n    }\n\n\n}\nexport default InputDate;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport InputDate from \"../../components/InputDate\"\nimport Logo from \"../../logo.svg\";\nimport {\n  Container,\n  Content,\n  Button,\n  FlexboxGrid,\n  Panel,\n  Form,\n  FormGroup,\n  ControlLabel,\n  FormControl,\n  ButtonToolbar,\n  Toggle,\n  Schema,\n  DatePicker\n\n} from 'rsuite';\nimport { ROUTE_SINGUP } from \"../../configs/api\";\n\nconst { StringType, DateType, NumberType } = Schema.Types;\n\n\n\n\nconst modelStep1 = Schema.Model({\n  date: DateType()\n    .isRequired('Informe a data da Viagem')\n    .addRule( (value,data) => {\n      return value > (new Date())\n    },'A Data tem que ser maior que a data de hoje'),\n\n  time : DateType()\n  .isRequired('Informe o horário da Viagem'),\n  pessoas: NumberType()\n    .isInteger('A quantidade de pessoas tem que ser um numero')\n    .min(0, 'Informe um valor positivo ou Zero')\n})\n\nconst modelStep2 = Schema.Model({\n  line_1: StringType()\n    .isRequired('Precisamos do seu endereço'),\n  line_2: StringType()\n    .isRequired('Informe um complemento para o seu endereço'),\n  city: StringType()\n    .isRequired('Informe uma cidade'),\n  state: StringType()\n    .isRequired('Informe um Estado'),\n  zipcode: StringType()\n    .isRequired('Informe o Seu CEP'),\n})\n\nconst modelStep3 = Schema.Model({\n  first_name: StringType()\n    .isRequired('Precisamos do seu primeiro nome'),\n  last_name: StringType()\n    .isRequired('O Sobrenome também é necessário'),\n  email: StringType()\n    .isRequired('O email é obrigatório')\n    .isEmail('O Campo precisa ser um email válido'),\n  username: StringType()\n    .isRequired('Digite um nome de usuário, ele será usado no seu login'),\n  password: StringType()\n    .isRequired('A Senha é obrigatória'),\n  password_confirm: StringType()\n    .addRule((value, data) => {\n      if (value !== data.password) {\n        return false;\n      }\n      return true;\n    }, 'As senhas não são iguais')\n    .isRequired('A Confirmação de Senha é obrigatória'),\n})\n\n\n\nconst modelStep4 = Schema.Model({\n  fabricante: StringType()\n    .isRequired('Informe o fabricante do veículo'),\n  modelo: StringType()\n    .isRequired('O modelo também é necessário'),\n  placa: StringType()\n    .isRequired('A placa do veículo é obrigatória'),\n\n  ano: NumberType()\n    .isRequired('Digite o ano do seu veículo'),\n  lugares: NumberType()\n    .isRequired('Informar a quantidade de lugares do veículo é obrigatória.')\n    .min(5, 'A quantidade mínima de lugares aceita é 5.')\n})\n\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: 1,\n      formStep3: {\n        first_name: '',\n        last_name: '',\n        email: '',\n        username: '',\n        password: '',\n        password_confirm: '',\n      },\n      formStep2: {\n        line_1: '',\n        line_2: '',\n        city: '',\n        state: '',\n        zipcode: '',\n        latitude: '',\n        longitude: '',\n      },\n      formStep1: {\n        date: null,\n        time: null,\n        pessoas: 0,\n      },\n      formStep4: {\n        fabricante: '',\n        modelo: '',\n        ano: '',\n        placa: '',\n        lugares: ''\n      },\n      driver: false,\n      formError: {}\n    };\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.updateDate = this.updateDate.bind(this);\n    this.updateTime = this.updateTime.bind(this);\n\n  }\n  clearFormErrors(){\n    const formError = {};\n    this.setState({formError : formError})\n  }\n  _next = () => {\n    let lastStep = this.state.driver ? 4 : 3;\n    let currentStep = this.state.currentStep\n    if (this.validateStep()) {\n      currentStep = currentStep >= lastStep ? lastStep : currentStep + 1\n      this.setState({\n        currentStep: currentStep\n      })\n    }else{\n      this.clearFormErrors()\n    }\n  }\n\n  _prev = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1\n    this.setState({\n      currentStep: currentStep\n    })\n  }\n  validateStep() {\n    return this.form.check()\n  }\n  previousButton() {\n    let currentStep = this.state.currentStep;\n    if (currentStep > 1) {\n      return (\n        <Link to={\"#\"} onClick={e =>{ e.preventDefault(); this._prev() }} >Voltar</Link>\n      )\n    }\n    return null;\n  }\n\n  nextButton() {\n    let currentStep = this.state.currentStep;\n    \n    if (currentStep < 3) {\n      return (\n        <Button onClick={this._next} appearance=\"primary\">Avançar</Button>\n      )\n    }else if (currentStep == 3 || currentStep == 4 ){\n      return <Button onClick={this.state.driver && currentStep == 3 ? this._next : this.handleSignUp} type={this.state.driver ? 'buttom' : 'submit'} appearance=\"primary\">{this.state.driver ? \"Cadastrar como Motorista\" : \"Cadastrar como Passageiro\"}</Button>\n    }\n    return null;\n  }\n\n  handleSignUp = async (e) => {\n    e.preventDefault();\n    if (!this.form.check()) {\n      console.error('Form Error');\n      return;\n    }\n    const { formStep1, formStep2, formStep3, formStep4, driver} = this.state;\n    try {\n      \n      let role = driver ? 1 : 2\n      let data = {\n        viagem : formStep1,\n        destino : formStep2,\n        usuario : formStep3,\n        veiculo : formStep4,\n        role : role,\n\n\n      }\n      await api.post(ROUTE_SINGUP, data).then((response) => {\n        if (response.status === 201) {\n          this.props.history.push(\"/\");\n        }\n      });\n\n    } catch (err) {\n      console.log(err);\n      this.setState({ error: \"Ocorreu um erro ao registrar sua conta. :(\" });\n    }\n\n  };\n  setFormState(formValues) {\n    if (this.state.currentStep === 1) {\n      this.setState({ formStep1: formValues });\n    } else if (this.state.currentStep === 2) {\n      this.setState({ formStep2: formValues });\n    } else if (this.state.currentStep === 3) {\n      this.setState({ formStep3: formValues });\n    } else if (this.state.currentStep === 4) {\n      this.setState({ formStep4: formValues });\n    }\n\n  }\n  getCurrentStep() {\n    if (this.state.currentStep === 1) {\n      return this.step1();\n    } else if (this.state.currentStep === 2) {\n      return this.step2();\n    } else if (this.state.currentStep === 3) {\n      return this.step3();\n    }else if (this.state.currentStep === 4) {\n      return this.step4();\n    }\n\n  }\n  updateDate(date) {\n    let formStep1 = this.state.formStep1\n    formStep1.date = date\n    this.setState({ formStep1: formStep1 })\n\n  }\n  updateTime(date){\n    let formStep1 = this.state.formStep1\n    if (formStep1.date != null) {\n      formStep1.date.setHours(date.getHours())\n      formStep1.date.setMinutes(date.getMinutes())\n      formStep1.time = date\n      this.setState({ formStep1: formStep1 })\n    } else {\n      let formError = this.state.formError\n      formError.time = \"Horário Inválido\"\n      this.setState({ formError: formError })\n      \n    }\n    \n  }\n  _getCurrentFormState(){\n\n    if (this.state.currentStep === 1) {\n      return this.state.formStep1\n    } else if (this.state.currentStep === 2) {\n      return this.state.formStep2\n    } else if (this.state.currentStep === 3) {\n      return this.state.formStep3\n    }else if (this.state.currentStep === 4) {\n      return this.state.formStep4\n    }\n  }\n  _getCurrentFormModel(){\n    if (this.state.currentStep === 1) {\n      return modelStep1\n    } else if (this.state.currentStep === 2) {\n      return modelStep2\n    } else if (this.state.currentStep === 3) {\n      return modelStep3\n    }else if (this.state.currentStep === 4) {\n      return modelStep4\n    }\n  }\n  render() {\n    const formValue = this._getCurrentFormState()\n    const model = this._getCurrentFormModel()\n\n    return (\n      <Container>\n        <Content>\n          <FlexboxGrid justify=\"center\" style={{ 'paddingTop': '2rem', 'paddingBottom': '2rem' }}>\n            <FlexboxGrid.Item colspan={12}>\n              <Panel header={<h3>Cadastro</h3>} bordered>\n                <img src={Logo} alt=\"CaronAPP logo\" style={{ 'height': '200px', 'margin': 'auto', 'display': 'flex' }} />\n                <Form\n                  ref={ref => (this.form = ref)}\n                  onChange={(formValue) => {\n                    this.setFormState(formValue)\n                  }}\n                  onCheck={formError => {\n                    this.setState({ formError });\n                  }}\n                  formValue={formValue}\n                  model={model}\n                  fluid>\n                  {this.getCurrentStep()}\n                  <FormGroup>\n                    <ButtonToolbar style={{padding: '1rem', marginTop : '2rem' }}>\n                      {this.previousButton()}\n                      {this.nextButton()}\n                    </ButtonToolbar>\n                  </FormGroup>\n                </Form>\n              </Panel>\n            </FlexboxGrid.Item>\n          </FlexboxGrid>\n        </Content>\n      </Container>\n    );\n  }\n  step3() {\n    return (\n      <div>\n        <FormGroup>\n          <ControlLabel>Nome</ControlLabel>\n          <FormControl name=\"first_name\" type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Sobrenome</ControlLabel>\n          <FormControl name=\"last_name\" type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Email</ControlLabel>\n          <FormControl name=\"email\" type=\"email\" />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Nome de Usuário</ControlLabel>\n          <FormControl name=\"username\" type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Senha</ControlLabel>\n          <FormControl name=\"password\" type=\"password\" />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Confirmação da Senha</ControlLabel>\n          <FormControl name=\"password_confirm\" type=\"password\" />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Motorista</ControlLabel>\n          <Toggle checked={this.state.driver} name=\"driver\" onChange={(e) => this.setState({ driver: !this.state.driver })} />\n        </FormGroup>\n      </div>\n      );\n  }\n\n  step2() {\n    return (\n      <div>\n        <FormGroup>\n          <ControlLabel>Endereço</ControlLabel>\n          <FormControl name=\"line_1\" type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Complemento</ControlLabel>\n          <FormControl name=\"line_2\" type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Cidade</ControlLabel>\n          <FormControl name=\"city\" type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Estado</ControlLabel>\n          <FormControl name=\"state\" type=\"email\" />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>CEP</ControlLabel>\n          <FormControl name=\"zipcode\" type=\"text\" />\n        </FormGroup>\n      </div>\n        );\n    \n  }\n\n\n\n  step1() {\n    const formValue = this._getCurrentFormState()\n    return (\n      <div>\n        <InputDate name=\"Data da Viagem\" appearance=\"default\" placeholder=\"Selecione a data da viagem\"\n          onSelect={this.updateDate}\n          format=\"DD-MM-YYYY\"\n          defaultValue={this.state.formStep1.date || null }\n          errorMessage={this.state.formError.date || null}\n          block\n        />\n        {formValue.date != null ? \n          <InputDate name=\"Data da Viagem\" appearance=\"default\" placeholder=\"Selecione a data da viagem\"\n          onSelect={this.updateTime}\n          format=\"HH:mm\"\n          defaultValue={this.state.formStep1.date || null }\n          errorMessage={this.state.formError.time || null}\n          block\n        />  \n        : null}\n        \n        <FormGroup>\n\n          <ControlLabel>Quantidade de passageiros (não incluir você)</ControlLabel>\n          <FormControl name=\"pessoas\" type=\"number\" min=\"0\" step=\"1\" />\n        </FormGroup>\n      </div>);\n  }\n\n  step4() {\n    return (\n      <div style={{paddingBottom:' 10px'}}>\n        <FormGroup>\n          <ControlLabel>Fabricante</ControlLabel>\n          <FormControl name=\"fabricante\" type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Modelo</ControlLabel>\n          <FormControl name=\"modelo\" type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Ano</ControlLabel>\n          <FormControl name=\"ano\" type=\"number\" min=\"1990\" step=\"1\" max={(new Date()).getFullYear()} />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Placa</ControlLabel>\n          <FormControl name=\"placa\" type=\"text\" />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Quantidade de Lugares do veículo.</ControlLabel>\n          <FormControl name=\"lugares\" type=\"number\" min=\"5\" step=\"1\" />\n        </FormGroup>\n      </div>);\n  }\n\n}\n\n\nexport default SignUp;","\n\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport const Form = styled.form`\n  width: 400px;\n  background: #fff;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  img {\n    width: 100px;\n    margin: 10px 0 40px;\n  }\n  p {\n    color: #ff3333;\n    margin-bottom: 15px;\n    border: 1px solid #ff3333;\n    padding: 10px;\n    width: 100%;\n    text-align: center;\n  }\n  input {\n    flex: 1;\n    height: 46px;\n    margin-bottom: 15px;\n    padding: 0 20px;\n    color: #777;\n    font-size: 15px;\n    width: 100%;\n    border: 1px solid #ddd;\n    &::placeholder {\n      color: #999;\n    }\n  }\n  button {\n    color: #fff;\n    font-size: 16px;\n    background: #fc6963;\n    height: 56px;\n    border: 0;\n    border-radius: 5px;\n    width: 100%;\n  }\n  hr {\n    margin: 20px 0;\n    border: none;\n    border-bottom: 1px solid #cdcdcd;\n    width: 100%;\n  }\n  a {\n    font-size: 16;\n    font-weight: bold;\n    color: #999;\n    text-decoration: none;\n  }\n`;\n\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport api from \"../../services/api\";\n\nimport Logo from \"../../logo.svg\";\n\nimport { Form, Container } from \"./styles\";\nimport { API_URL, ROUTE_CLIENTE } from \"../../configs/api\";\nimport { login } from \"../../services/auth\";\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleLogin = async e => {\n    e.preventDefault();\n    const { username, password } = this.state;\n    if (!username || !password) {\n      this.setState({ error: \"Preencha todos os campos para realizar o login!\" });\n    } else {\n      try {\n        await api.post(ROUTE_CLIENTE.login, { username, password }).then((response)=>{\n          if(response.status === 201){\n            console.log(response.data)\n            login(response.data.token,response.data.role);\n            this.props.history.push(\"/home\");\n          \n          }\n        });\n  \n      } catch (err) {\n        console.log(err);\n        this.setState({ error: \"Ocorreu um erro ao realizar o login.\" });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Form onSubmit={this.handleLogin}>\n          <img src={Logo} alt=\"caronapp logo\" />\n          {this.state.error && <p>{this.state.error}</p>}\n          <input\n            type=\"text\"\n            placeholder=\"Nome de usuário\"\n            onChange={e => this.setState({ username: e.target.value })}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Senha\"\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <button type=\"submit\">Login</button>\n          <hr />\n          <Link to=\"/cadastro\">Novo aqui? Cadastrar-se.</Link>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default Login;","import React, {Component} from \"react\";\n\nimport {\n    Container,\n    Content,\n    ControlLabel,\n    FlexboxGrid,\n    Form,\n    FormControl,\n    FormGroup,\n    Schema,\n} from \"rsuite\";\nimport {DateType, NumberType, StringType} from \"schema-typed\";\nimport InputDate from \"./InputDate\";\n\nconst modelDate =  Schema.Model({\n    date: DateType()\n        .isRequired('Informe a data da Viagem')\n        .addRule( (value,data) => {\n            return value > (new Date())\n        },'A Data tem que ser maior que a data de hoje'),\n\n    time : DateType()\n        .isRequired('Informe o horário da Viagem'),\n    pessoas: NumberType()\n        .isInteger('A quantidade de pessoas tem que ser um numero')\n        .min(0, 'Informe um valor positivo ou Zero')\n})\nconst modelDestino = Schema.Model({\n    line_1: StringType()\n        .isRequired('Precisamos do seu endereço'),\n    line_2: StringType()\n        .isRequired('Informe um complemento para o seu endereço'),\n    city: StringType()\n        .isRequired('Informe uma cidade'),\n    state: StringType()\n        .isRequired('Informe um Estado'),\n    zipcode: StringType()\n        .isRequired('Informe o Seu CEP'),\n})\n\n\nexport class FormDestino extends Component {\n\n    constructor(props) {\n        super(props);\n        const data = props.data\n        this.state = {\n            formValues :{\n                line_1:  data ? data.line_1 : '',\n                line_2:  data ? data.line_2 : '',\n                city:  data ? data.line_city: '',\n                state:  data ? data.state : '',\n                zipcode:  data ? data.zipcode: '',\n            },\n            formError: {}\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.validate = this.validate.bind(this);\n    }\n    handleChange(values) {\n        this.setState({formValues: values})\n    }\n    clearFormErrors(){\n        const formError = {};\n        this.setState({formError : formError})\n    }\n    validate() {\n        this.form.check()\n        this.props.onChange(this.state.formValues);\n        // return this.form.valid\n    }\n\n\n    render() {\n        const formValue = this.state.formValues;\n        return (\n            <Container>\n                <Content>\n                    <FlexboxGrid justify=\"center\" style={{ 'paddingTop': '2rem', 'paddingBottom': '2rem' }}>\n                        <FlexboxGrid.Item colspan={12}>\n                            <Form\n                                ref={ref => (this.form = ref)}\n                                onChange={this.handleChange}\n                                onCheck={formError => {\n                                    this.setState({ formError });\n                                }}\n                                formValue={formValue}\n                                model={modelDestino}\n                                fluid>\n                                <FormGroup>\n                                    <ControlLabel>Endereço</ControlLabel>\n                                    <FormControl name=\"line_1\" type=\"text\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <ControlLabel>Complemento</ControlLabel>\n                                    <FormControl name=\"line_2\" type=\"text\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <ControlLabel>Cidade</ControlLabel>\n                                    <FormControl name=\"city\" type=\"text\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <ControlLabel>Estado</ControlLabel>\n                                    <FormControl name=\"state\" type=\"email\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <ControlLabel>CEP</ControlLabel>\n                                    <FormControl name=\"zipcode\" type=\"text\" />\n                                </FormGroup>\n                                <FormGroup>\n\n                                </FormGroup>\n                            </Form>\n                        </FlexboxGrid.Item>\n                    </FlexboxGrid>\n                </Content>\n            </Container>\n        );\n    }\n}\nexport class FormDate extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChange = props.onChange;\n        const data  = props.data\n        this.state = {\n            formValues :{\n               date: data ? data.date : '',\n               time: data ? data.time : '',\n               pessoas : data ? data.pessoas : 0,\n            },\n            formError: {}\n        };\n\n        this.updateDate = this.updateDate.bind(this);\n        this.updateTime = this.updateTime.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.validate = this.validate.bind(this);\n    }\n    handleChange(values) {\n        this.setState({formValues: values})\n    }\n    clearFormErrors(){\n        const formError = {};\n        this.setState({formError : formError})\n    }\n    validate() {\n        this.form.check()\n        this.props.onChange(this.state.formValues);\n        // return this.form.valid\n    }\n\n    updateDate(date) {\n        let formValues = this.state.formValues\n        formValues.date = date\n        this.setState({ formValues: formValues })\n\n    }\n    updateTime(date){\n        let formValues = this.state.formValues\n        if (formValues.date != null) {\n            formValues.date.setHours(date.getHours())\n            formValues.date.setMinutes(date.getMinutes())\n            formValues.time = date\n            this.setState({ formValues: formValues })\n        } else {\n            let formError = this.state.formError\n            formError.time = \"Horário Inválido\"\n            this.setState({ formError: formError })\n\n        }\n\n    }\n    render() {\n        const formValue = this.state.formValues;\n        return (\n            <Container>\n                <Content>\n                    <FlexboxGrid justify=\"center\" style={{ 'paddingTop': '2rem', 'paddingBottom': '2rem' }}>\n                        <FlexboxGrid.Item colspan={12}>\n                            <Form\n                                ref={ref => (this.form = ref)}\n                                onChange={this.handleChange}\n                                onCheck={formError => {\n                                    this.setState({ formError });\n                                }}\n                                formValue={formValue}\n                                model={modelDate}\n                                fluid>\n                                <InputDate name=\"Data da Viagem\" appearance=\"default\" placeholder=\"Selecione a data da viagem\"\n                                           onSelect={this.updateDate}\n                                           format=\"DD-MM-YYYY\"\n                                           defaultValue={this.state.formValues.date || null }\n                                           errorMessage={this.state.formError.date || null}\n                                           block\n                                />\n                                {formValue.date != null ?\n                                    <InputDate name=\"Data da Viagem\" appearance=\"default\" placeholder=\"Selecione a data da viagem\"\n                                               onSelect={this.updateTime}\n                                               format=\"HH:mm\"\n                                               defaultValue={this.state.formValues.date || null }\n                                               errorMessage={this.state.formError.time || null}\n                                               block\n                                    />\n                                    : null}\n\n                                <FormGroup>\n\n                                    <ControlLabel>Quantidade de passageiros (não incluir você)</ControlLabel>\n                                    <FormControl name=\"pessoas\" type=\"number\" min=\"0\" step=\"1\" />\n                                </FormGroup>\n                                <FormGroup>\n\n                                </FormGroup>\n                            </Form>\n                        </FlexboxGrid.Item>\n                    </FlexboxGrid>\n                </Content>\n            </Container>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport {\n  Container,\n  Content,\n  Header,\n  Panel,\n  PanelGroup,\n  ButtonGroup,\n  Button,\n  ButtonToolbar,\n  List,\n  FlexboxGrid,\n  Icon,\n  Whisper,\n  Tooltip\n\n} from 'rsuite';\nimport {FormDate, FormDestino} from \"../../components/FormCarona\";\nimport api from \"../../services/api\";\nimport {getRole} from \"../../services/auth\";\nimport {ROUTE_CLIENTE, ROUTE_MOTORISTA} from \"../../configs/api\";\nimport {showNotification} from \"../../routes\";\n\n\nconst styleCenter = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '60px'\n};\n\nconst slimText = {\n  fontSize: '0.666em',\n  color: '#97969B',\n  fontWeight: 'lighter',\n  paddingBottom: 5\n};\n\nconst titleStyle = {\n  paddingBottom: 5,\n  whiteSpace: 'nowrap',\n  fontWeight: 500\n};\n\nconst dataStyle = {\n  fontSize: '1.2em',\n  fontWeight: 500\n};\n\nclass Home extends Component {\n  _getViagens(){\n    const url = getRole() == 1 ? ROUTE_CLIENTE.viagem : ROUTE_MOTORISTA.viagem;\n      api.get(url).then((response) =>{\n        if(response.status === 200) {\n          console.log(data);\n          const data = response.data;\n          this.setState({data : data,loading : false});\n\n        }\n      });\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading : true,\n      data : [],\n      formValues : {\n        date : '',\n        pessoas : '',\n        line_1 : '',\n        line_2 : '',\n        city : '',\n        state : '',\n        zipcode : ''\n      }\n    }\n    this.formDate = React.createRef()\n    this.formDestino = React.createRef()\n\n    this._getViagens()\n    this.handleNewViagem = this.handleNewViagem.bind(this);\n  }\n\n  getColorStatus(status) {\n    switch (status) {\n      case 1 :\n        return 'yellow'\n      case 2 :\n        return 'green'\n      case 3 :\n        return 'red'\n      case 4 :\n        return 'orange'\n      case 5 :\n        return 'green'\n    }\n  }\n    getStatusText(status){\n      switch (status) {\n        case 1 :\n          return 'Pendente'\n        case 2 :\n          return 'Aceito'\n        case 3 :\n          return 'Recusado'\n        case 4 :\n          return 'Expiado'\n        case 5 :\n          return null\n      }\n  }\n  handleNewViagem(){\n    if(this.formDate.form.check() && this.formDestino.form.check()) {\n      const formDate = this.formDate.state.formValues;\n      const formDestino = this.formDestino.state.formValues;\n      const viagem = {\n        date : formDate.date,\n        pessoas : formDate.pessoas,\n        line_1: formDestino.line_1,\n        line_2: formDestino.line_2,\n        city  : formDestino.city,\n        state : formDestino.state,\n        zipcode  : formDestino.zipcode,\n      }\n      const url = getRole() == 1 ? ROUTE_CLIENTE.viagem : ROUTE_MOTORISTA.viagem;\n      api.post(url,viagem).then((response) =>{\n        if(response.status === 200){\n            showNotification('success','Viagem cadastrada com sucesso!');\n            this._getViagens()\n        }\n      })\n    }\n  }\n  render() {\n    const data = this.state.data;\n    const loading = this.state.loading;\n    return (\n        <Container>\n          <Header>\n            <h2>Caronas</h2>\n          </Header>\n          <Content>\n            <PanelGroup accordion bordered>\n              <Panel header=\"Nova Viagem\">\n                <Header>\n                  <h5>Data da Viagem</h5>\n                </Header>\n                  <FormDate ref={instance => { this.formDate = instance; }}/>\n                  <Header>\n                    <h5>Destino da Viagem</h5>\n                  </Header>\n                  <FormDestino  ref={instance => { this.formDestino = instance; }}/>\n                <ButtonToolbar style={{padding: '2rem'}} >\n                  <ButtonGroup>\n                    <Button appearance=\"primary\" onClick={this.handleNewViagem} >Salvar</Button>\n                  </ButtonGroup>\n                </ButtonToolbar>\n              </Panel>\n            </PanelGroup>\n            {getRole() == 1\n                ? <List hover>\n                  {!loading && data.map((item, index) => (\n                      <List.Item key={index} index={index}>\n                        <FlexboxGrid>\n                          {/*base info*/}\n                          <FlexboxGrid.Item\n                              colspan={6}\n                              style={{\n                                ...styleCenter,\n                                flexDirection: 'column',\n                                alignItems: 'flex-start',\n                                overflow: 'hidden'\n                              }}\n                          >\n                            <div style={titleStyle}>{item['destino']['city'] + ' - ' + item['destino']['state']}</div>\n                          </FlexboxGrid.Item>\n                          <FlexboxGrid.Item colspan={2} style={styleCenter}>\n                            <div style={{textAlign: 'right'}}>\n                              <div style={slimText}>Solicitacoes</div>\n                              <div style={dataStyle}>\n                              <Whisper\n                                  trigger=\"click\"\n                                  placement=\"auto\"\n                                  speaker={\n                                    <Tooltip>\n                                      {item['carona']['solicitacoes'].map((solicitacao,index) =>{\n                                        return (<div>{\"#\"+(index+1) + '-' + this.getStatusText(solicitacao.status) + ' | Pessoas : ' + (solicitacao.viagem.pessoas+1) }</div>)\n                                      })}\n                                    </Tooltip>\n                                  }\n                              >\n                                <div style={dataStyle}>\n                                  {' ' + item['carona']['solicitacoes'].length}\n                                </div>\n\n                              </Whisper>\n                              </div>\n\n                            </div>\n                          </FlexboxGrid.Item>\n                          <FlexboxGrid.Item colspan={2} style={styleCenter}>\n                            <div style={{textAlign: 'right'}}>\n                              <div style={slimText}>Vagas</div>\n                              <div style={dataStyle}>\n                                <div>\n                                  <Icon icon=\"circle\" style={{color: item['carona']['vagas'] > 0 ? 'green' : 'red'}}/>\n                                  {' ' + item['carona']['vagas']}\n                                </div>\n                              </div>\n                            </div>\n                          </FlexboxGrid.Item>\n                          <FlexboxGrid.Item colspan={6} style={styleCenter}>\n                            <div style={{textAlign: 'right'}}>\n                              <div style={slimText}>Data</div>\n                              <div style={dataStyle}>\n                                {item['date']}\n                              </div>\n                            </div>\n                          </FlexboxGrid.Item>\n                          <FlexboxGrid.Item\n                              colspan={4}\n                              style={{\n                                ...styleCenter\n                              }}\n                          >\n                            <a href=\"#\">Detalhes</a>\n                          </FlexboxGrid.Item>\n                        </FlexboxGrid>\n                      </List.Item>\n                  ))}\n                </List>\n                : <List hover>\n                  {!loading && data.map((item, index) => (\n                      <List.Item key={index} index={index}>\n                        <FlexboxGrid>\n                          {/*base info*/}\n                          <FlexboxGrid.Item\n                              colspan={6}\n                              style={{\n                                ...styleCenter,\n                                flexDirection: 'column',\n                                alignItems: 'flex-start',\n                                overflow: 'hidden'\n                              }}\n                          >\n                            <div style={titleStyle}>{item['destino']['city'] + ' - ' + item['destino']['state']}</div>\n                          </FlexboxGrid.Item>\n                          <FlexboxGrid.Item colspan={2} style={styleCenter}>\n                            <div style={{textAlign: 'right'}}>\n                              <div style={slimText}>Solicitacoes</div>\n                              <div style={dataStyle}>\n                                <Whisper\n                                    trigger=\"click\"\n                                    placement=\"auto\"\n                                    speaker={\n                                      <Tooltip>\n                                        {item['solicitacoes'].map((solicitacao,index) =>{\n                                          return (<div>{\"#\"+(index+1) + '-' + this.getStatusText(solicitacao.status)}</div>)\n                                        })}\n                                      </Tooltip>\n                                    }\n                                >\n                                  <div style={dataStyle}>\n                                    {' ' + item ['solicitacoes'].length}\n                                  </div>\n\n                                </Whisper>\n                              </div>\n                            </div>\n                          </FlexboxGrid.Item>\n                          <FlexboxGrid.Item colspan={6} style={styleCenter}>\n                            <div style={{textAlign: 'right'}}>\n                              <div style={slimText}>Data</div>\n                              <div style={dataStyle}>\n                                {item['date']}\n                              </div>\n                            </div>\n                          </FlexboxGrid.Item>\n                          <FlexboxGrid.Item\n                              colspan={4}\n                              style={{\n                                ...styleCenter\n                              }}\n                          >\n                            <a href=\"#\">Detalhes</a>\n                          </FlexboxGrid.Item>\n                        </FlexboxGrid>\n                      </List.Item>\n                  ))}\n                </List>\n            }\n          </Content>\n        </Container>\n    );\n  }\n\n}\n\n\nexport default Home;","import React, {Component} from \"react\";\n\nimport {\n    Container,\n    Content,\n    ControlLabel,\n    FlexboxGrid,\n    Form,\n    FormControl,\n    FormGroup,\n    Schema,\n} from \"rsuite\";\nimport {StringType} from \"schema-typed\";\n\nconst model = Schema.Model({\n    first_name: StringType()\n        .isRequired('Precisamos do seu primeiro nome'),\n    last_name: StringType()\n        .isRequired('O Sobrenome também é necessário'),\n    email: StringType()\n        .isRequired('O email é obrigatório')\n        .isEmail('O Campo precisa ser um email válido'),\n    username: StringType()\n        .isRequired('Digite um nome de usuário, ele será usado no seu login'),\n    password: StringType()\n        .isRequired('A Senha é obrigatória'),\n    password_confirm: StringType()\n        .addRule((value, data) => {\n            if (value !== data.password) {\n                return false;\n            }\n            return true;\n        }, 'As senhas não são iguais')\n        .isRequired('A Confirmação de Senha é obrigatória'),\n});\nexport class FormUsuario extends Component {\n\n    constructor(props) {\n        super(props);\n        const user = props['user']\n        console.log(props)\n        this.state = {\n            formValues :{\n                first_name: user != null ?  user.first_name : '',\n                last_name: user  != null ?  user.last_name : '',\n                email: user  != null ?  user.email : '',\n                username:  user  != null ?  user.username : '',\n                password: '',\n                password_confirm: '',\n            },\n            formError: {}\n        };\n\n    }\n    clearFormErrors(){\n        const formError = {};\n        this.setState({formError : formError})\n    }\n    validate() {\n        return this.form.check()\n    }\n    render() {\n        const formValue = this.state.formValues;\n        return (\n            <Container>\n                <Content>\n                    <FlexboxGrid justify=\"center\" style={{ 'paddingTop': '2rem', 'paddingBottom': '2rem' }}>\n                        <FlexboxGrid.Item colspan={12}>\n                                <Form\n                                    ref={ref => (this.form = ref)}\n                                    onChange={(formValue) => {\n                                        this.setState({formValues : formValue })\n                                    }}\n                                    onCheck={formError => {\n                                        this.setState({ formError });\n                                    }}\n                                    formValue={formValue}\n                                    model={model}\n                                    fluid>\n                                    <FormGroup>\n                                        <ControlLabel>Nome</ControlLabel>\n                                        <FormControl name=\"first_name\" type=\"text\" />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <ControlLabel>Sobrenome</ControlLabel>\n                                        <FormControl name=\"last_name\" type=\"text\" />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <ControlLabel>Email</ControlLabel>\n                                        <FormControl name=\"email\" type=\"email\" />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <ControlLabel>Nome de Usuário</ControlLabel>\n                                        <FormControl name=\"username\" type=\"text\" />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <ControlLabel>Senha</ControlLabel>\n                                        <FormControl name=\"password\" type=\"password\" />\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <ControlLabel>Confirmação da Senha</ControlLabel>\n                                        <FormControl name=\"password_confirm\" type=\"password\" />\n                                    </FormGroup>\n                                    <FormGroup>\n\n                                    </FormGroup>\n                                </Form>\n                        </FlexboxGrid.Item>\n                    </FlexboxGrid>\n                </Content>\n            </Container>\n        );\n    }\n}\nexport default FormUsuario","import React, { Component } from \"react\";\nimport {\n    Button,\n    ButtonGroup, ButtonToolbar,\n    Container,\n    Content,\n    Header\n\n} from 'rsuite';\nimport FormUsuario from \"../../components/FormUsuario\";\nimport api from \"../../services/api\";\nimport {ROUTE_MOTORISTA,ROUTE_CLIENTE} from \"../../configs/api\";\nimport {getRole} from \"../../services/auth\";\n\nclass Perfil extends Component {\n    async _fetchUser(){\n        const url = getRole() == 1 ? ROUTE_MOTORISTA.base : ROUTE_CLIENTE.base;\n        await api.get(url).then((response) =>{\n            const data = response.data;\n            const user ={\n                first_name: data.first_name,\n                last_name: data.last_name,\n                email: data.email,\n                username: data.username,\n                password: data.password,\n                password_confirm: data.password_confirm,\n            }\n            this.setState({user : user,loading : false})\n        })\n\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            user : null,\n            loading : true\n        };\n        this._fetchUser();\n    };\n\n    onChange(values){\n        this.setState({user : values});\n    }\n\n    render() {\n        const user = this.state.user;\n        const loading = this.state.loading;\n        return (\n            <Container>\n                <Header>\n                    <h2>Perfil</h2>\n                </Header>\n                <Content>\n                    { !loading\n                        ? <FormUsuario user={user} onChange={this.onChange}></FormUsuario>\n                        : <h1>...</h1>\n                    }\n                    <ButtonToolbar style={{padding: '2rem'}} >\n                        <ButtonGroup>\n                            <Button appearance=\"primary\" >Salvar</Button>\n                        </ButtonGroup>\n                    </ButtonToolbar>\n                </Content>\n            </Container>\n        );\n    }\n}\n\n\nexport default Perfil;","import React, {Component} from \"react\";\n\nimport {\n    Container,\n    Content,\n    ControlLabel,\n    FlexboxGrid,\n    Form,\n    FormControl,\n    FormGroup,\n    Schema,\n} from \"rsuite\";\nimport {NumberType, StringType} from \"schema-typed\";\n\nconst model = Schema.Model({\n    fabricante: StringType()\n        .isRequired('Informe o fabricante do veículo'),\n    modelo: StringType()\n        .isRequired('O modelo também é necessário'),\n    placa: StringType()\n        .isRequired('A placa do veículo é obrigatória'),\n\n    ano: NumberType()\n        .isRequired('Digite o ano do seu veículo'),\n    lugares: NumberType()\n        .isRequired('Informar a quantidade de lugares do veículo é obrigatória.')\n        .min(5, 'A quantidade mínima de lugares aceita é 5.')\n})\nexport class FormVeiculo extends Component {\n\n    constructor(props) {\n        super(props);\n        const veiculo = props['veiculo'];\n        this.state = {\n            formValues :{\n                fabricante: veiculo != null ? veiculo.fabricante : veiculo,\n                modelo: veiculo != null ? veiculo.modelo : veiculo,\n                ano: veiculo != null ? veiculo.ano : veiculo,\n                placa: veiculo != null ? veiculo.placa : veiculo,\n                lugares: veiculo != null ? veiculo.lugares : veiculo\n            },\n\n            formError: {}\n        };\n    }\n    clearFormErrors(){\n        const formError = {};\n        this.setState({formError : formError})\n    }\n    validate() {\n        return this.form.check()\n    }\n    render() {\n        const formValue = this.state.formValues;\n        return (\n            <Container>\n                <Content>\n                    <FlexboxGrid justify=\"center\" style={{ 'paddingTop': '2rem', 'paddingBottom': '2rem' }}>\n                        <FlexboxGrid.Item colspan={12}>\n                            <Form\n                                ref={ref => (this.form = ref)}\n                                onChange={(formValue) => {\n                                    this.setState({formValues : formValue })\n                                }}\n                                onCheck={formError => {\n                                    this.setState({ formError });\n                                }}\n                                formValue={formValue}\n                                model={model}\n                                fluid>\n                                <FormGroup>\n                                    <ControlLabel>Fabricante</ControlLabel>\n                                    <FormControl name=\"fabricante\" type=\"text\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <ControlLabel>Modelo</ControlLabel>\n                                    <FormControl name=\"modelo\" type=\"text\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <ControlLabel>Ano</ControlLabel>\n                                    <FormControl name=\"ano\" type=\"number\" min=\"1990\" step=\"1\" max={(new Date()).getFullYear()} />\n                                </FormGroup>\n                                <FormGroup>\n                                    <ControlLabel>Placa</ControlLabel>\n                                    <FormControl name=\"placa\" type=\"text\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <ControlLabel>Quantidade de Lugares do veículo.</ControlLabel>\n                                    <FormControl name=\"lugares\" type=\"number\" min=\"5\" step=\"1\" />\n                                </FormGroup>\n                                <FormGroup>\n\n                                </FormGroup>\n                            </Form>\n                        </FlexboxGrid.Item>\n                    </FlexboxGrid>\n                </Content>\n            </Container>\n        );\n    }\n}\nexport default FormVeiculo","import React, { Component } from \"react\";\nimport {\n    Button,\n    ButtonGroup, ButtonToolbar,\n    Container,\n    Content,\n    Header\n\n} from 'rsuite';\nimport FormVeiculo from \"../../components/FormVeiculo\";\nimport {ROUTE_MOTORISTA} from \"../../configs/api\";\nimport api from \"../../services/api\";\n\nclass Veiculo extends Component {\n     async _fetchVeiculo(){\n         await api.get(ROUTE_MOTORISTA.veiculo).then((response) =>{\n            const data = response.data;\n            const veiculo = {\n                fabricante : data.fabricante,\n                modelo     : data.modelo,\n                ano        : data.ano,\n                placa      : data.placa\n             }\n             this.setState({veiculo: veiculo,loading :false})\n        })\n\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            veiculo : null,\n            loading : true,\n        }\n        this._fetchVeiculo();\n    };\n\n    render() {\n        const veiculo = this.state.veiculo;\n        const loading = this.state.loading;\n        return (\n            <Container>\n                <Header>\n                    <h2>Veiculo</h2>\n                </Header>\n                <Content>\n                    {!loading\n                        ? <FormVeiculo veiculo={veiculo}></FormVeiculo>\n                        : '...'\n                    }\n                    <ButtonToolbar style={{padding: '2rem'}} >\n                        <ButtonGroup>\n                            <Button appearance=\"primary\" >Salvar</Button>\n                        </ButtonGroup>\n                    </ButtonToolbar>\n                </Content>\n            </Container>\n        );\n    }\n\n}\n\n\nexport default Veiculo;","import React, { Component } from \"react\";\nimport {\n    Container,\n    Content,\n    Header\n\n} from 'rsuite';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n    };\n\n    render() {\n        return (\n            <Container>\n                <Header>\n                    <h2>Home</h2>\n                </Header>\n                <Content>Content</Content>\n            </Container>\n        );\n    }\n\n}\n\n\nexport default Home;","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport SignUp from \"./pages/Cadastro\";\nimport Login from \"./pages/Login\";\nimport Caronas from \"./pages/Caronas\";\nimport Perfil from \"./pages/Perfil\";\nimport Veiculo from \"./pages/Veiculo\";\nimport Home from \"./pages/Home\";\nimport {getRole, isAuthenticated, logout} from \"./services/auth\";\n\nimport {\n    Nav,\n    Icon,\n    Container,\n    Sidebar,\n    Sidenav,\n    Content,\n    Notification\n} from \"rsuite\";\n\n\nconst headerStyles = {\n    padding: 18,\n    fontSize: 16,\n    height: 56,\n    background: '#34c3ff',\n    color: ' #fff',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n};\n\nexport const showNotification = (type,message) => {\n    Notification[type]({\n        title: type,\n        description: <Content>{message}</Content>\n    });\n}\n\n\nconst iconStyles = {\n    width: 56,\n    height: 56,\n    lineHeight: '56px',\n    textAlign: 'center'\n};\nconst AppLayout = ({children, ...rest}) => {\n    return (\n        <Container>\n            <Sidebar\n                style={{ display: 'flex', flexDirection: 'column' }}\n                width={260}\n                collapsible\n            >\n                <Sidenav\n                    defaultOpenKeys={['4']}\n                    appearance=\"subtle\"\n                >\n                    <Sidenav.Header>\n                        <div style={headerStyles}>\n                            Car-OnAPP\n                        </div>\n                    </Sidenav.Header>\n            <Sidenav.Body>\n                <Nav>\n                    <Nav.Item eventKey=\"1\" active icon={<Icon icon=\"home\"/>} href={\"/home\"}>\n                        Home\n                    </Nav.Item>\n\n                    <Nav.Item eventKey=\"2\" icon={<Icon icon=\"road\"/>} href={\"/caronas\"}>\n                        {getRole() == 1  ? 'Caronas' : 'Viagens' }\n                    </Nav.Item>\n                    {getRole() == 1 &&\n                    <Nav.Item eventKey=\"3\" icon={<Icon icon=\"car\"/>} href={\"/veiculo\"}>\n                        Veiculos\n                    </Nav.Item>\n                    }\n                    <Nav.Item eventKey=\"4\" icon={<Icon icon=\"avatar\" />} href={\"/perfil\"}>\n                        Perfil\n                    </Nav.Item>\n                    <Nav.Item eventKey=\"4\" icon={<Icon icon=\"off\" />} href={\"#\"} onClick={() =>{logout() }}>\n                        Sair\n                    </Nav.Item>\n                </Nav>\n            </Sidenav.Body>\n\n            </Sidenav>\n            </Sidebar>\n            <Container style={{padding: '2rem'}}>\n                <Content >\n                {children}\n                </Content>\n            </Container>\n        </Container>\n    )\n}\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated() ? (\n          <AppLayout>\n              <Component {...props}/>\n          </AppLayout>\n      ) : (\n        <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n      )\n    }\n  />\n);\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route path=\"/cadastro\" component={ SignUp }/>\n      <PrivateRoute path=\"/home\" component={ Home } />\n      <PrivateRoute path=\"/caronas\" component={ Caronas } />\n      <PrivateRoute path=\"/veiculo\" component={ Veiculo } />\n      <PrivateRoute path=\"/perfil\" component={ Perfil } />\n\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;","import { createGlobalStyle } from 'styled-components'\n\n\n\n\nimport \"font-awesome/css/font-awesome.css\";\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  outline: 0;\n}\nbody, html {\n  background: #eee;\n  font-family: 'Helvetica Neue', 'Helvetica', Arial, sans-serif;\n  text-rendering: optimizeLegibility !important;\n  -webkit-font-smoothing: antialiased !important;\n  height: 100%;\n  width: 100%;\n}\n`;","import React from \"react\";\nimport Routes from \"./routes\";\nimport \"./styles/global\";\n\nconst App = () => <Routes />;\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}