{"version":3,"sources":["services/auth.js","configs/api.js","services/api.js","pages/Cadastro/styles.js","components/ToggleSwitch.js","pages/Cadastro/index.jsx","pages/Login/styles.js","pages/Login/index.jsx","routes.js","styles/global.js","App.jsx","serviceWorker.js","index.js","logo.svg"],"names":["getToken","localStorage","getItem","setToken","token","setItem","login","ROUTE_CLIENTE","base","cadastro","destino","viagem","carona","ROUTE_MOTORISTA","veiculo","api","axios","create","baseURL","interceptors","request","use","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","wrap","_context","prev","next","headers","Authorization","abrupt","stop","_x","apply","this","arguments","Container","styled","div","_templateObject","Form","form","_templateObject2","ToggleSwitchWrapper","ToggleSwitch_templateObject","Toggle","ToggleSwitch_templateObject2","props","bgClear","width","padding","toggled","bgToggled","borderColor","ToggleBall","_templateObject3","ballColor","concat","ballColorActive","RippleBg","_templateObject4","visible","InnerLabel","span","_templateObject5","size","color","left","right","OuterLabel","_templateObject6","ToggleSwitch","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","initial","_this2","setState","onToggle","react_default","createElement","assign","onClick","outerLabel","outerLabelSize","outerLabelColor","innerLabelLeft","innerLabelSize","innerLabelColor","innerLabelRight","Component","defaultProps","SignUp","username","email","password","driver","error","handleSignUp","e","_this$state","url","preventDefault","post","then","response","status","history","push","t0","console","log","onSubmit","src","Logo","alt","type","placeholder","onChange","target","value","components","intent","Intent","PRIMARY","react_router_dom","to","styles_templateObject","styles_templateObject2","Login","handleLogin","data","body","styles_Container","styles_Form","PrivateRoute","component","rest","objectWithoutProperties","react_router","render","pathname","from","location","Routes","exact","path","routes_PrivateRoute","createGlobalStyle","global_templateObject","App","routes","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e68e451d.chunk.js","sourcesContent":["export const TOKEN_KEY = \"@caronapp-Token\";\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\nexport const setToken = (token) => localStorage.setItem(TOKEN_KEY,token);\nexport const isAuthenticated = () => getToken() !== null;\nexport const login = (token) => setToken(token);\nexport const logout = () => setToken(null);","export const API_URL = \"http://127.0.0.1:3333/api/v1/\"\nexport const ROUTE_CLIENTE = {\n    base:\"cliente\",\n    cadastro:\"cliente/cadastro\",\n    login:\"session\",\n    destino:\"cliente/destino\",\n    viagem:\"cliente/viagem\",\n    carona:\"cliente/carona\"\n};\nexport const ROUTE_MOTORISTA = {\n    base:\"motorista\",\n    cadastro:\"motorista/cadastro\",\n    login:\"session\",\n    destino:\"motorista/destino\",\n    viagem:\"motorista/viagem\",\n    carona:\"motorista/carona\",\n    veiculo:\"motorista/veiculo\"\n};","import axios from \"axios\"\nimport { getToken } from \"./auth\"\nimport { API_URL } from \"../configs/api\"\nconst api = axios.create({ \n    baseURL: API_URL\n})\napi.interceptors.request.use(async config => {\n    const token = getToken();\n    if(token){\n        config.headers.Authorization = 'Bearer '+ token;\n    }\n    return config;\n})\nexport default api;","\n\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport const Form = styled.form`\n  width: 400px;\n  background: #fff;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  img {\n    width: 100px;\n    margin: 10px 0 40px;\n  }\n  p {\n    color: #ff3333;\n    margin-bottom: 15px;\n    border: 1px solid #ff3333;\n    padding: 10px;\n    width: 100%;\n    text-align: center;\n  }\n  input {\n    flex: 1;\n    height: 46px;\n    margin-bottom: 15px;\n    padding: 10px 20px;\n    color: #777;\n    font-size: 15px;\n    width: 100%;\n    border: 1px solid #ddd;\n    &::placeholder {\n      color: #999;\n    }\n  }\n  button {\n    color: #fff;\n    font-size: 16px;\n    background: #fc6963;\n    height: 56px;\n    border: 0;\n    border-radius: 5px;\n    width: 100%;\n  }\n  hr {\n    margin: 20px 0;\n    border: none;\n    border-bottom: 1px solid #cdcdcd;\n    width: 100%;\n  }\n  a {\n    font-size: 16;\n    font-weight: bold;\n    color: #999;\n    text-decoration: none;\n  }\n`;","import React, { PropTypes, Component } from 'react';\nimport styled from 'styled-components';\n\n// Styled components\nconst ToggleSwitchWrapper = styled.div`\n  display: flex;\n  position: relative;\n`;\n\nconst Toggle = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n  position: relative;\n  transform: translate3d(0, 0, 0);\n  background-color: ${props => props.bgClear};\n  height: ${props => (props.width / 2)}px;\n  width: ${props => props.width}px;\n  border-radius: ${props => props.width / 4}px;\n  padding: ${props => props.padding}px;\n  border: 1px solid ${props => props.toggled ?\n    props.bgToggled :\n    props.borderColor\n};\n`;\n\nconst ToggleBall = styled.div`\n  z-index: 2;\n  border-radius: 50%;\n  box-shadow: 0px 0px 3px rgba(0,0,0,0.2);\n  transition: transform 0.3s cubic-bezier(1,.19,.15,.7);\n  transition-delay: 0.1s;\n  will-change: transform;\n  background-color: ${props => props.ballColor};\n  border: 1px solid ${props => props.borderColor};\n  height: ${props => (props.width / 2) - (props.padding * 2)}px;\n  width: ${props => (props.width / 2) - (props.padding * 2)}px;\n  transform: ${props => props.toggled ?\n    `translateX(${props.width - (props.width / 2)}px)` :\n    'translateX(0px)'\n};\n  &:active {\n    background-color: ${props => props.ballColorActive};\n  }\n`;\n\nconst RippleBg = styled.div`\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background-image: radial-gradient(\n    circle, ${props => props.bgToggled} 10%, transparent 10.01%\n  );\n  background-repeat: no-repeat;\n  background-position: 50%;\n  pointer-events: none;\n  transition: transform 0.5s, opacity 0.3s ease;\n  transform: ${props => props.visible ? 'scale(10, 10)' : 'scale(0, 0)'};\n  opacity: ${props => props.visible ? 1 : 0};\n  position: absolute;\n  z-index: 1;\n`;\n\nconst InnerLabel = styled.span`\n  font-size: ${props => props.size}px;\n  color: ${props => props.color};\n  position: absolute;\n  z-index: 2;\n  ${props => props.left && 'left: 10px;'};\n  ${props => props.right && 'right: 10px;'};\n`;\n\nconst OuterLabel = styled.span`\n  font-size: ${props => props.size}px;\n  color: ${props => props.color};\n  position: absolute;\n  top: 0px;\n  transform: translateY(-110%);\n  width: 100%;\n  text-align: center;\n`;\n\nconst propTypes = {\n    innerLabelLeft: PropTypes.string,\n    innerLabelRight: PropTypes.string,\n    innerLabelColor: PropTypes.string,\n    innerLabelSize: PropTypes.string,\n    outerLabel: PropTypes.string,\n    outerLabelColor: PropTypes.string,\n    outerLabelSize: PropTypes.string,\n    initial: PropTypes.bool,\n    onToggle: PropTypes.func.isRequired,\n    width: PropTypes.number.isRequired,\n    padding: PropTypes.number.isRequired,\n    ballColor: PropTypes.string.isRequired,\n    ballColorActive: PropTypes.string.isRequired,\n    bgToggled: PropTypes.string.isRequired,\n    bgClear: PropTypes.string.isRequired,\n    borderColor: PropTypes.string.isRequired,\n};\n\nclass ToggleSwitch extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n\n        this.state = {\n            toggled: props.initial || false,\n        };\n    }\n\n    toggle() {\n        // Update local state first and then call toggle handler\n        this.setState(state => ({ toggled: !state.toggled }),\n            () => this.props.onToggle(this.state.toggled)\n        );\n    }\n\n    render() {\n        return (\n            <ToggleSwitchWrapper>\n                <Toggle\n                    onClick={this.toggle}\n                    toggled={this.state.toggled}\n                    {...this.props}\n                >\n                    {this.props.outerLabel &&\n                    <OuterLabel\n                        size={this.props.outerLabelSize}\n                        color={this.props.outerLabelColor}\n                    >\n                        {this.props.outerLabel}\n                    </OuterLabel>\n                    }\n                    <ToggleBall\n                        toggled={this.state.toggled}\n                        {...this.props}\n                    />\n                    <RippleBg\n                        visible={this.state.toggled}\n                        {...this.props}\n                    />\n\n                    {this.props.innerLabelLeft &&\n                    <InnerLabel\n                        left\n                        size={this.props.innerLabelSize}\n                        color={this.props.innerLabelColor}\n                    >\n                        {this.props.innerLabelLeft}\n                    </InnerLabel>\n                    }\n                    {this.props.innerLabelRight &&\n                    <InnerLabel\n                        right\n                        size={this.props.innerLabelSize}\n                        color={this.props.innerLabelColor}\n                    >\n                        {this.props.innerLabelRight}\n                    </InnerLabel>\n                    }\n\n                </Toggle>\n            </ToggleSwitchWrapper>\n        );\n    }\n}\n\n\nToggleSwitch.propTypes = propTypes;\n\nconst green = '#22e222';\nconst lightGrey = '#f5f5f5';\nconst grey = '#ddd';\nconst white = '#fff';\nconst black = '#222';\n\nToggleSwitch.defaultProps = {\n    initial: false,\n    width: 40,\n    padding: 3,\n    ballColor: white,\n    ballColorActive: lightGrey,\n    bgToggled: green,\n    bgClear: white,\n    borderColor: grey,\n    innerLabelSize: 12,\n    innerLabelColor: black,\n    outerLabelSize: 16,\n    outerLabelColor: black,\n};\n\nexport default ToggleSwitch;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport api from \"../../services/api\";\n\nimport Logo from \"../../logo.svg\";\nimport { Button, Intent, Spinner } from \"@blueprintjs/core\";\nimport { Form, Container } from \"./styles\";\nimport { ROUTE_CLIENTE,ROUTE_MOTORISTA } from \"../../configs/api\";\nimport  ToggleSwitch  from \"../../components/ToggleSwitch\";\nclass SignUp extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    driver : false,\n    error: \"\"\n  };\n\n  handleSignUp = async e => {\n    e.preventDefault();\n    const { username, email, password } = this.state;\n    if (!username || !email || !password) {\n      this.setState({ error: \"Preencha todos os dados para se cadastrar!\" });\n    } else {\n      try {\n        let url = ROUTE_CLIENTE.cadastro;\n        if(!this.state.driver){\n          url = ROUTE_MOTORISTA.cadastro\n        }\n        await api.post(url, { username, email, password }).then((response)=>{\n          if(response.status === 201){\n            this.props.history.push(\"/\");\n          }\n        });\n  \n      } catch (err) {\n        console.log(err);\n        this.setState({ error: \"Ocorreu um erro ao registrar sua conta. :(\" });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Form onSubmit={this.handleSignUp}>\n          <img src={Logo} alt=\"caronapp logo\" />\n          {this.state.error && <p>{this.state.error}</p>}\n          <input\n            type=\"text\"\n            placeholder=\"Nome de usuário\"\n            onChange={e => this.setState({ username: e.target.value })}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Endereço de e-mail\"\n            onChange={e => this.setState({ email: e.target.value })}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Senha\"\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <Spinner intent={Intent.PRIMARY} />\n          \n          <button type=\"submit\">Cadastrar grátis</button>\n          <hr />\n          <Link to=\"/\">Fazer login</Link>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default SignUp;","\n\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport const Form = styled.form`\n  width: 400px;\n  background: #fff;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  img {\n    width: 100px;\n    margin: 10px 0 40px;\n  }\n  p {\n    color: #ff3333;\n    margin-bottom: 15px;\n    border: 1px solid #ff3333;\n    padding: 10px;\n    width: 100%;\n    text-align: center;\n  }\n  input {\n    flex: 1;\n    height: 46px;\n    margin-bottom: 15px;\n    padding: 0 20px;\n    color: #777;\n    font-size: 15px;\n    width: 100%;\n    border: 1px solid #ddd;\n    &::placeholder {\n      color: #999;\n    }\n  }\n  button {\n    color: #fff;\n    font-size: 16px;\n    background: #fc6963;\n    height: 56px;\n    border: 0;\n    border-radius: 5px;\n    width: 100%;\n  }\n  hr {\n    margin: 20px 0;\n    border: none;\n    border-bottom: 1px solid #cdcdcd;\n    width: 100%;\n  }\n  a {\n    font-size: 16;\n    font-weight: bold;\n    color: #999;\n    text-decoration: none;\n  }\n`;\n\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport api from \"../../services/api\";\n\nimport Logo from \"../../logo.svg\";\n\nimport { Form, Container } from \"./styles\";\nimport { API_URL, ROUTE_CLIENTE } from \"../../configs/api\";\nimport { login } from \"../../services/auth\";\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleLogin = async e => {\n    e.preventDefault();\n    const { username, password } = this.state;\n    if (!username || !password) {\n      this.setState({ error: \"Preencha todos os campos para realizar o login!\" });\n    } else {\n      try {\n        await api.post(ROUTE_CLIENTE.login, { username, password }).then((response)=>{\n          if(response.status === 201){\n            console.log(response.data)\n            console.log(response.token)            \n            console.log(response.body)\n            \n            login(response.data.token);\n            this.props.history.push(\"/app\");           \n          \n          }\n        });\n  \n      } catch (err) {\n        console.log(err);\n        this.setState({ error: \"Ocorreu um erro ao realizar o login.\" });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Form onSubmit={this.handleLogin}>\n          <img src={Logo} alt=\"caronapp logo\" />\n          {this.state.error && <p>{this.state.error}</p>}\n          <input\n            type=\"text\"\n            placeholder=\"Nome de usuário\"\n            onChange={e => this.setState({ username: e.target.value })}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Senha\"\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <button type=\"submit\">Login</button>\n          <hr />\n          <Link to=\"/cadastro\">Novo aqui? Cadastrar-se.</Link>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default Login;","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport SignUp from \"./pages/Cadastro\";\nimport Login from \"./pages/Login\";\nimport { isAuthenticated } from \"./services/auth\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n      )\n    }\n  />\n);\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route path=\"/cadastro\" component={ SignUp }/>\n      <PrivateRoute path=\"/app\" component={() => <h1>App</h1>} />\n      <Route path=\"*\" component={ <h1>Page not found</h1>} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;","import { createGlobalStyle } from 'styled-components'\n\n\n\n\nimport \"font-awesome/css/font-awesome.css\";\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  outline: 0;\n}\nbody, html {\n  background: #eee;\n  font-family: 'Helvetica Neue', 'Helvetica', Arial, sans-serif;\n  text-rendering: optimizeLegibility !important;\n  -webkit-font-smoothing: antialiased !important;\n  height: 100%;\n  width: 100%;\n}\n`;","import React from \"react\";\nimport Routes from \"./routes\";\nimport \"./styles/global\";\n\nconst App = () => <Routes />;\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.3762619f.svg\";"],"sourceRoot":""}