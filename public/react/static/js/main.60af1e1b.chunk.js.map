{"version":3,"sources":["logo.svg","services/auth.js","configs/api.js","services/api.js","pages/Cadastro/styles.js","pages/Cadastro/index.js","pages/Login/styles.js","pages/Login/index.js","routes.js","styles/global.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getToken","localStorage","getItem","setToken","token","setItem","login","ROUTE_CLIENTE","base","cadastro","destino","viagem","carona","api","axios","create","baseURL","interceptors","request","use","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","wrap","_context","prev","next","headers","Authorization","abrupt","stop","_x","apply","this","arguments","Container","styled","div","_templateObject","Form","form","_templateObject2","SignUp","state","username","email","password","error","handleSignUp","e","_this$state","preventDefault","_this","setState","post","then","response","status","props","history","push","t0","console","log","_this2","react_default","createElement","onSubmit","src","Logo","alt","type","placeholder","onChange","target","value","react_router_dom","to","Component","styles_templateObject","styles_templateObject2","Login","handleLogin","data","body","styles_Container","styles_Form","PrivateRoute","component","rest","objectWithoutProperties","react_router","assign","render","pathname","from","location","Routes","exact","path","routes_PrivateRoute","createGlobalStyle","global_templateObject","App","routes","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60af1e1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3762619f.svg\";","export const TOKEN_KEY = \"@caronapp-Token\";\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\nexport const setToken = (token) => localStorage.setItem(TOKEN_KEY,token);\nexport const isAuthenticated = () => getToken() !== null;\nexport const login = (token) => setToken(token);\nexport const logout = () => setToken(null);","export const API_URL = \"http://127.0.0.1:3333/api/v1/\"\nexport const ROUTE_CLIENTE = {\n    base:\"cliente\",\n    cadastro:\"cliente/cadastro\",\n    login:\"session\",\n    destino:\"cliente/destino\",\n    viagem:\"cliente/viagem\",\n    carona:\"cliente/carona\"\n};\nexport const ROUTE_MOTORISTA = {\n    base:\"motorista\",\n    cadastro:\"motorista/cadastro\",\n    login:\"session\",\n    destino:\"motorista/destino\",\n    viagem:\"motorista/viagem\",\n    carona:\"motorista/carona\",\n    veiculo:\"motorista/veiculo\"\n};","import axios from \"axios\"\nimport { getToken } from \"./auth\"\nimport { API_URL } from \"../configs/api\"\nconst api = axios.create({ \n    baseURL: API_URL\n})\napi.interceptors.request.use(async config => {\n    const token = getToken();\n    if(token){\n        config.headers.Authorization = 'Bearer '+ token;\n    }\n    return config;\n})\nexport default api;","\n\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport const Form = styled.form`\n  width: 400px;\n  background: #fff;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  img {\n    width: 100px;\n    margin: 10px 0 40px;\n  }\n  p {\n    color: #ff3333;\n    margin-bottom: 15px;\n    border: 1px solid #ff3333;\n    padding: 10px;\n    width: 100%;\n    text-align: center;\n  }\n  input {\n    flex: 1;\n    height: 46px;\n    margin-bottom: 15px;\n    padding: 0 20px;\n    color: #777;\n    font-size: 15px;\n    width: 100%;\n    border: 1px solid #ddd;\n    &::placeholder {\n      color: #999;\n    }\n  }\n  button {\n    color: #fff;\n    font-size: 16px;\n    background: #fc6963;\n    height: 56px;\n    border: 0;\n    border-radius: 5px;\n    width: 100%;\n  }\n  hr {\n    margin: 20px 0;\n    border: none;\n    border-bottom: 1px solid #cdcdcd;\n    width: 100%;\n  }\n  a {\n    font-size: 16;\n    font-weight: bold;\n    color: #999;\n    text-decoration: none;\n  }\n`;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport api from \"../../services/api\";\n\nimport Logo from \"../../logo.svg\";\n\nimport { Form, Container } from \"./styles\";\nimport { API_URL, ROUTE_CLIENTE } from \"../../configs/api\";\nimport { login } from \"../../services/auth\";\n\nclass SignUp extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleSignUp = async e => {\n    e.preventDefault();\n    const { username, email, password } = this.state;\n    if (!username || !email || !password) {\n      this.setState({ error: \"Preencha todos os dados para se cadastrar!\" });\n    } else {\n      try {\n        await api.post(ROUTE_CLIENTE.cadastro, { username, email, password }).then((response)=>{\n          if(response.status === 201){\n            this.props.history.push(\"/\");\n          \n          }\n        });\n  \n      } catch (err) {\n        console.log(err);\n        this.setState({ error: \"Ocorreu um erro ao registrar sua conta. :(\" });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Form onSubmit={this.handleSignUp}>\n          <img src={Logo} alt=\"caronapp logo\" />\n          {this.state.error && <p>{this.state.error}</p>}\n          <input\n            type=\"text\"\n            placeholder=\"Nome de usuário\"\n            onChange={e => this.setState({ username: e.target.value })}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"Endereço de e-mail\"\n            onChange={e => this.setState({ email: e.target.value })}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Senha\"\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <button type=\"submit\">Cadastrar grátis</button>\n          <hr />\n          <Link to=\"/\">Fazer login</Link>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default SignUp;","\n\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport const Form = styled.form`\n  width: 400px;\n  background: #fff;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  img {\n    width: 100px;\n    margin: 10px 0 40px;\n  }\n  p {\n    color: #ff3333;\n    margin-bottom: 15px;\n    border: 1px solid #ff3333;\n    padding: 10px;\n    width: 100%;\n    text-align: center;\n  }\n  input {\n    flex: 1;\n    height: 46px;\n    margin-bottom: 15px;\n    padding: 0 20px;\n    color: #777;\n    font-size: 15px;\n    width: 100%;\n    border: 1px solid #ddd;\n    &::placeholder {\n      color: #999;\n    }\n  }\n  button {\n    color: #fff;\n    font-size: 16px;\n    background: #fc6963;\n    height: 56px;\n    border: 0;\n    border-radius: 5px;\n    width: 100%;\n  }\n  hr {\n    margin: 20px 0;\n    border: none;\n    border-bottom: 1px solid #cdcdcd;\n    width: 100%;\n  }\n  a {\n    font-size: 16;\n    font-weight: bold;\n    color: #999;\n    text-decoration: none;\n  }\n`;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport api from \"../../services/api\";\n\nimport Logo from \"../../logo.svg\";\n\nimport { Form, Container } from \"./styles\";\nimport { API_URL, ROUTE_CLIENTE } from \"../../configs/api\";\nimport { login } from \"../../services/auth\";\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleLogin = async e => {\n    e.preventDefault();\n    const { username, password } = this.state;\n    if (!username || !password) {\n      this.setState({ error: \"Preencha todos os campos para realizar o login!\" });\n    } else {\n      try {\n        await api.post(ROUTE_CLIENTE.login, { username, password }).then((response)=>{\n          if(response.status === 201){\n            console.log(response.data)\n            console.log(response.token)            \n            console.log(response.body)\n            \n            login(response.data.token);\n            this.props.history.push(\"/app\");           \n          \n          }\n        });\n  \n      } catch (err) {\n        console.log(err);\n        this.setState({ error: \"Ocorreu um erro ao realizar o login.\" });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Form onSubmit={this.handleLogin}>\n          <img src={Logo} alt=\"caronapp logo\" />\n          {this.state.error && <p>{this.state.error}</p>}\n          <input\n            type=\"text\"\n            placeholder=\"Nome de usuário\"\n            onChange={e => this.setState({ username: e.target.value })}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Senha\"\n            onChange={e => this.setState({ password: e.target.value })}\n          />\n          <button type=\"submit\">Login</button>\n          <hr />\n          <Link to=\"/\">Novo aqui? Cadastrar-se.</Link>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default Login;","import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport SignUp from \"./pages/Cadastro\";\nimport Login from \"./pages/Login\";\nimport { isAuthenticated } from \"./services/auth\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated() ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n      )\n    }\n  />\n);\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route path=\"/cadastro\" component={ SignUp }/>\n      <PrivateRoute path=\"/app\" component={() => <h1>App</h1>} />\n      <Route path=\"*\" component={ <h1>Page not found</h1>} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;","import { createGlobalStyle } from 'styled-components'\n\n\n\n\nimport \"font-awesome/css/font-awesome.css\";\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n  outline: 0;\n}\nbody, html {\n  background: #eee;\n  font-family: 'Helvetica Neue', 'Helvetica', Arial, sans-serif;\n  text-rendering: optimizeLegibility !important;\n  -webkit-font-smoothing: antialiased !important;\n  height: 100%;\n  width: 100%;\n}\n`;","import React from \"react\";\nimport Routes from \"./routes\";\nimport \"./styles/global\";\n\nconst App = () => <Routes />;\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}